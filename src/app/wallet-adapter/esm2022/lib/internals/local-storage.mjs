import { BehaviorSubject } from 'rxjs';
const getInitialValue = (key) => {
    try {
        const value = localStorage.getItem(key);
        return value ? JSON.parse(value) : null;
    }
    catch (error) {
        if (typeof window !== 'undefined') {
            console.error(error);
        }
    }
    return null;
};
export class LocalStorageSubject extends BehaviorSubject {
    constructor(_key) {
        super(getInitialValue(_key));
        this._key = _key;
    }
    next(value) {
        try {
            if (value === null) {
                localStorage.removeItem(this._key);
            }
            else {
                localStorage.setItem(this._key, JSON.stringify(value));
            }
        }
        catch (error) {
            if (typeof window !== 'undefined') {
                console.error(error);
            }
        }
        super.next(value);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9jYWwtc3RvcmFnZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL2RhdGEtYWNjZXNzL3NyYy9saWIvaW50ZXJuYWxzL2xvY2FsLXN0b3JhZ2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUV2QyxNQUFNLGVBQWUsR0FBRyxDQUFJLEdBQVcsRUFBWSxFQUFFO0lBQ25ELElBQUk7UUFDRixNQUFNLEtBQUssR0FBRyxZQUFZLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRXhDLE9BQU8sS0FBSyxDQUFDLENBQUMsQ0FBRSxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBTyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7S0FDaEQ7SUFBQyxPQUFPLEtBQUssRUFBRTtRQUNkLElBQUksT0FBTyxNQUFNLEtBQUssV0FBVyxFQUFFO1lBQ2pDLE9BQU8sQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDdEI7S0FDRjtJQUVELE9BQU8sSUFBSSxDQUFDO0FBQ2QsQ0FBQyxDQUFDO0FBRUYsTUFBTSxPQUFPLG1CQUF1QixTQUFRLGVBQXlCO0lBQ25FLFlBQW9CLElBQVk7UUFDOUIsS0FBSyxDQUFDLGVBQWUsQ0FBSSxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBRGQsU0FBSSxHQUFKLElBQUksQ0FBUTtJQUVoQyxDQUFDO0lBRVEsSUFBSSxDQUFDLEtBQWU7UUFDM0IsSUFBSTtZQUNGLElBQUksS0FBSyxLQUFLLElBQUksRUFBRTtnQkFDbEIsWUFBWSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7YUFDcEM7aUJBQU07Z0JBQ0wsWUFBWSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQzthQUN4RDtTQUNGO1FBQUMsT0FBTyxLQUFLLEVBQUU7WUFDZCxJQUFJLE9BQU8sTUFBTSxLQUFLLFdBQVcsRUFBRTtnQkFDakMsT0FBTyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQzthQUN0QjtTQUNGO1FBRUQsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNwQixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCZWhhdmlvclN1YmplY3QgfSBmcm9tICdyeGpzJztcblxuY29uc3QgZ2V0SW5pdGlhbFZhbHVlID0gPFQ+KGtleTogc3RyaW5nKTogVCB8IG51bGwgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IHZhbHVlID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oa2V5KTtcblxuICAgIHJldHVybiB2YWx1ZSA/IChKU09OLnBhcnNlKHZhbHVlKSBhcyBUKSA6IG51bGw7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBjb25zb2xlLmVycm9yKGVycm9yKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbnVsbDtcbn07XG5cbmV4cG9ydCBjbGFzcyBMb2NhbFN0b3JhZ2VTdWJqZWN0PFQ+IGV4dGVuZHMgQmVoYXZpb3JTdWJqZWN0PFQgfCBudWxsPiB7XG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgX2tleTogc3RyaW5nKSB7XG4gICAgc3VwZXIoZ2V0SW5pdGlhbFZhbHVlPFQ+KF9rZXkpKTtcbiAgfVxuXG4gIG92ZXJyaWRlIG5leHQodmFsdWU6IFQgfCBudWxsKTogdm9pZCB7XG4gICAgdHJ5IHtcbiAgICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSh0aGlzLl9rZXkpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0odGhpcy5fa2V5LCBKU09OLnN0cmluZ2lmeSh2YWx1ZSkpO1xuICAgICAgfVxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7XG4gICAgICB9XG4gICAgfVxuXG4gICAgc3VwZXIubmV4dCh2YWx1ZSk7XG4gIH1cbn1cbiJdfQ==