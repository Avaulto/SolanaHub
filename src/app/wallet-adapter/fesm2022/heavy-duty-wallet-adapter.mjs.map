{"version":3,"file":"heavy-duty-wallet-adapter.mjs","sources":["../../../../packages/data-access/src/lib/internals/errors.ts","../../../../packages/data-access/src/lib/internals/from-adapter-event.ts","../../../../packages/data-access/src/lib/internals/handle-event.ts","../../../../packages/data-access/src/lib/internals/is-not-null-or-undefined.ts","../../../../packages/data-access/src/lib/internals/local-storage.ts","../../../../packages/data-access/src/lib/internals/sign.ts","../../../../packages/data-access/src/lib/connection.store.ts","../../../../packages/data-access/src/lib/wallet.store.ts","../../../../packages/data-access/src/lib/wallet-adapter.module.ts","../../../../packages/data-access/src/heavy-duty-wallet-adapter.ts"],"sourcesContent":["import { WalletError } from '@solana/wallet-adapter-base';\n\nexport class WalletNotSelectedError extends WalletError {\n  override name = 'WalletNotSelectedError';\n}\n","import {\n  WalletAdapter,\n  WalletAdapterEvents,\n} from '@solana/wallet-adapter-base';\nimport { fromEventPattern, Observable } from 'rxjs';\n\ntype FirstParameter<T> = T extends () => unknown\n  ? void\n  : T extends (arg1: infer U, ...args: unknown[]) => unknown\n  ? U\n  : unknown;\n\nexport const fromAdapterEvent = <\n  EventName extends keyof WalletAdapterEvents,\n  CallbackParameter extends FirstParameter<WalletAdapterEvents[EventName]>\n>(\n  adapter: WalletAdapter,\n  eventName: EventName\n): Observable<CallbackParameter> =>\n  fromEventPattern(\n    (addHandler) => adapter.on(eventName, addHandler),\n    (removeHandler) => adapter.off(eventName, removeHandler)\n  );\n","import { Observable, of, switchMap } from 'rxjs';\n\nexport const handleEvent =\n  <SourceType, OutputType>(\n    project: (value: SourceType) => Observable<OutputType | null>\n  ) =>\n  (source: Observable<SourceType | null>): Observable<OutputType | null> =>\n    source.pipe(\n      switchMap((payload) => (payload === null ? of(null) : project(payload)))\n    );\n","import { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nexport const isNotNullOrUndefined = <T>(\n  source: Observable<T | null | undefined>\n) =>\n  source.pipe(filter((item): item is T => item !== null && item !== undefined));\n","import { BehaviorSubject } from 'rxjs';\n\nconst getInitialValue = <T>(key: string): T | null => {\n  try {\n    const value = localStorage.getItem(key);\n\n    return value ? (JSON.parse(value) as T) : null;\n  } catch (error) {\n    if (typeof window !== 'undefined') {\n      console.error(error);\n    }\n  }\n\n  return null;\n};\n\nexport class LocalStorageSubject<T> extends BehaviorSubject<T | null> {\n  constructor(private _key: string) {\n    super(getInitialValue<T>(_key));\n  }\n\n  override next(value: T | null): void {\n    try {\n      if (value === null) {\n        localStorage.removeItem(this._key);\n      } else {\n        localStorage.setItem(this._key, JSON.stringify(value));\n      }\n    } catch (error) {\n      if (typeof window !== 'undefined') {\n        console.error(error);\n      }\n    }\n\n    super.next(value);\n  }\n}\n","import {\n  MessageSignerWalletAdapter,\n  SignerWalletAdapter,\n  TransactionOrVersionedTransaction,\n  WalletAdapterProps,\n  WalletError,\n  WalletNotConnectedError,\n} from '@solana/wallet-adapter-base';\nimport { Transaction, VersionedTransaction } from '@solana/web3.js';\nimport { Observable, defer, from, throwError } from 'rxjs';\n\nexport interface SignerWalletAdapterProps<Name extends string = string>\n  extends WalletAdapterProps<Name> {\n  signTransaction<\n    T extends TransactionOrVersionedTransaction<\n      this['supportedTransactionVersions']\n    >\n  >(\n    transaction: T\n  ): Observable<T>;\n  signAllTransactions<\n    T extends TransactionOrVersionedTransaction<\n      this['supportedTransactionVersions']\n    >\n  >(\n    transactions: T[]\n  ): Observable<T[]>;\n}\n\nexport const signMessage = (\n  adapter: MessageSignerWalletAdapter,\n  connected: boolean,\n  errorHandler: (error: WalletError) => unknown\n): ((message: Uint8Array) => Observable<Uint8Array>) => {\n  return (message: Uint8Array) => {\n    if (!connected) {\n      return throwError(() => errorHandler(new WalletNotConnectedError()));\n    }\n\n    return from(defer(() => adapter.signMessage(message)));\n  };\n};\n\nexport const signTransaction = <T extends Transaction | VersionedTransaction>(\n  adapter: SignerWalletAdapter,\n  connected: boolean,\n  errorHandler: (error: WalletError) => unknown\n): ((transaction: T) => Observable<T>) => {\n  return (transaction: T) => {\n    if (!connected) {\n      return throwError(() => errorHandler(new WalletNotConnectedError()));\n    }\n\n    return from(defer(() => adapter.signTransaction(transaction)));\n  };\n};\n\nexport const signAllTransactions = <\n  T extends Transaction | VersionedTransaction\n>(\n  adapter: SignerWalletAdapter,\n  connected: boolean,\n  errorHandler: (error: WalletError) => unknown\n): ((transactions: T[]) => Observable<T[]>) => {\n  return (transactions: T[]) => {\n    if (!connected) {\n      return throwError(() => errorHandler(new WalletNotConnectedError()));\n    }\n\n    return from(defer(() => adapter.signAllTransactions(transactions)));\n  };\n};\n","import { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport { ComponentStore } from '@ngrx/component-store';\nimport { Connection, ConnectionConfig } from '@solana/web3.js';\nimport { tap } from 'rxjs';\nimport { isNotNullOrUndefined } from './internals';\n\nexport const CONNECTION_CONFIG = new InjectionToken<ConnectionConfig>(\n\t'connectionConfig'\n);\n\nexport const connectionConfigProviderFactory = (\n\tconfig: ConnectionConfig = {}\n) => ({\n\tprovide: CONNECTION_CONFIG,\n\tuseValue: {\n\t\tcommitment: 'confirmed',\n\t\t...config,\n\t},\n});\n\ninterface ConnectionState {\n\tconnection: Connection | null;\n\tendpoint: string | null;\n}\n\n@Injectable()\nexport class ConnectionStore extends ComponentStore<ConnectionState> {\n\tprivate readonly _endpoint$ = this.select(\n\t\tthis.state$,\n\t\t({ endpoint }) => endpoint\n\t);\n\treadonly connection$ = this.select(\n\t\tthis.state$,\n\t\t({ connection }) => connection\n\t);\n\n\tconstructor(\n\t\t@Optional()\n\t\t@Inject(CONNECTION_CONFIG)\n\t\tprivate _config: ConnectionConfig\n\t) {\n\t\tsuper({\n\t\t\tconnection: null,\n\t\t\tendpoint: null,\n\t\t});\n\t}\n\n\treadonly setEndpoint = this.updater((state, endpoint: string) => ({\n\t\t...state,\n\t\tendpoint,\n\t}));\n\n\treadonly onEndpointChange = this.effect(() =>\n\t\tthis._endpoint$.pipe(\n\t\t\tisNotNullOrUndefined,\n\t\t\ttap((endpoint) =>\n\t\t\t\tthis.patchState({\n\t\t\t\t\tconnection: new Connection(endpoint, this._config),\n\t\t\t\t})\n\t\t\t)\n\t\t)\n\t);\n}\n","import { Inject, Injectable, InjectionToken } from '@angular/core';\nimport { ComponentStore } from '@ngrx/component-store';\nimport {\n  Adapter,\n  SendTransactionOptions,\n  WalletError,\n  WalletName,\n  WalletNotConnectedError,\n  WalletNotReadyError,\n  WalletReadyState,\n} from '@solana/wallet-adapter-base';\nimport {\n  Connection,\n  PublicKey,\n  Transaction,\n  TransactionSignature,\n  VersionedTransaction,\n} from '@solana/web3.js';\nimport {\n  EMPTY,\n  Observable,\n  catchError,\n  combineLatest,\n  concatMap,\n  defer,\n  filter,\n  finalize,\n  first,\n  firstValueFrom,\n  from,\n  fromEvent,\n  merge,\n  of,\n  pairwise,\n  switchMap,\n  tap,\n  throwError,\n  withLatestFrom,\n} from 'rxjs';\nimport {\n  LocalStorageSubject,\n  SignerWalletAdapterProps,\n  WalletNotSelectedError,\n  fromAdapterEvent,\n  handleEvent,\n  signAllTransactions,\n  signMessage,\n  signTransaction,\n} from './internals';\n\nexport interface Wallet {\n  adapter: Adapter;\n  readyState: WalletReadyState;\n}\n\nexport interface AnchorWallet {\n  publicKey: PublicKey;\n  signTransaction<T extends Transaction | VersionedTransaction>(\n    transaction: T\n  ): Promise<T>;\n  signAllTransactions<T extends Transaction | VersionedTransaction>(\n    transactions: T[]\n  ): Promise<T[]>;\n}\n\nexport interface WalletConfig {\n  localStorageKey: string;\n  autoConnect: boolean;\n  adapters: Adapter[];\n}\n\nexport const WALLET_CONFIG = new InjectionToken<WalletConfig>('walletConfig');\n\nexport const walletConfigProviderFactory = (config: Partial<WalletConfig>) => ({\n  provide: WALLET_CONFIG,\n  useValue: {\n    autoConnect: false,\n    localStorageKey: 'walletName',\n    adapters: [],\n    ...config,\n  },\n});\n\ninterface WalletState {\n  adapters: Adapter[];\n  wallets: Wallet[];\n  wallet: Wallet | null;\n  adapter: Adapter | null;\n  connecting: boolean;\n  disconnecting: boolean;\n  unloading: boolean;\n  connected: boolean;\n  readyState: WalletReadyState | null;\n  publicKey: PublicKey | null;\n  autoConnect: boolean;\n  error: WalletError | null;\n}\n\nconst initialState: {\n  wallet: Wallet | null;\n  adapter: Adapter | null;\n  connected: boolean;\n  publicKey: PublicKey | null;\n  readyState: WalletReadyState | null;\n} = {\n  wallet: null,\n  adapter: null,\n  connected: false,\n  publicKey: null,\n  readyState: null,\n};\n\n@Injectable()\nexport class WalletStore extends ComponentStore<WalletState> {\n  private readonly _name = new LocalStorageSubject<WalletName>(\n    this._config.localStorageKey\n  );\n  private readonly _unloading$ = this.select(({ unloading }) => unloading);\n  private readonly _adapters$ = this.select(({ adapters }) => adapters);\n  private readonly _adapter$ = this.select(({ adapter }) => adapter);\n  private readonly _name$ = this._name.asObservable();\n  private readonly _readyState$ = this.select(({ readyState }) => readyState);\n  readonly wallets$ = this.select(({ wallets }) => wallets);\n  readonly autoConnect$ = this.select(({ autoConnect }) => autoConnect);\n  readonly wallet$ = this.select(({ wallet }) => wallet);\n  readonly publicKey$ = this.select(({ publicKey }) => publicKey);\n  readonly connecting$ = this.select(({ connecting }) => connecting);\n  readonly disconnecting$ = this.select(({ disconnecting }) => disconnecting);\n  readonly connected$ = this.select(({ connected }) => connected);\n  readonly error$ = this.select(({ error }) => error);\n  readonly anchorWallet$ = this.select(\n    this.publicKey$,\n    this._adapter$,\n    this.connected$,\n    (publicKey, adapter, connected) => {\n      return publicKey &&\n        adapter &&\n        'signTransaction' in adapter &&\n        'signAllTransactions' in adapter\n        ? ({\n            publicKey,\n            signTransaction: <T extends Transaction | VersionedTransaction>(\n              transaction: T\n            ): Promise<T> =>\n              firstValueFrom(\n                signTransaction<T>(adapter, connected, (error) =>\n                  this._setError(error)\n                )(transaction)\n              ),\n            signAllTransactions: <T extends Transaction | VersionedTransaction>(\n              transactions: T[]\n            ): Promise<T[]> =>\n              firstValueFrom(\n                signAllTransactions<T>(adapter, connected, (error) =>\n                  this._setError(error)\n                )(transactions)\n              ),\n          } as AnchorWallet)\n        : undefined;\n    },\n    { debounce: true }\n  );\n\n  constructor(\n    @Inject(WALLET_CONFIG)\n    private _config: WalletConfig\n  ) {\n    super({\n      ...initialState,\n      wallets: [],\n      adapters: [],\n      connecting: false,\n      disconnecting: false,\n      unloading: false,\n      autoConnect: _config.autoConnect || false,\n      readyState: null,\n      error: null,\n    });\n\n    this.setAdapters(this._config.adapters);\n  }\n\n  // Set error\n  private readonly _setError = this.updater((state, error: WalletError) => ({\n    ...state,\n    error: state.unloading ? state.error : error,\n  }));\n\n  // Set ready state\n  private readonly _setReadyState = this.updater(\n    (\n      state,\n      {\n        readyState,\n        walletName,\n      }: { readyState: WalletReadyState; walletName: WalletName }\n    ) => ({\n      ...state,\n      wallets: state.wallets.map((wallet) =>\n        wallet.adapter.name === walletName ? { ...wallet, readyState } : wallet\n      ),\n      readyState:\n        state.adapter?.name === walletName ? readyState : state.readyState,\n    })\n  );\n\n  // Set adapters\n  readonly setAdapters = this.updater((state, adapters: Adapter[]) => ({\n    ...state,\n    adapters,\n    wallets: adapters.map((adapter) => ({\n      adapter,\n      readyState: adapter.readyState,\n    })),\n  }));\n\n  // Update ready state for newly selected adapter\n  readonly onAdapterChangeDisconnectPreviousAdapter = this.effect(() =>\n    this._adapter$.pipe(\n      pairwise(),\n      concatMap(([adapter]) =>\n        adapter && adapter.connected\n          ? from(defer(() => adapter.disconnect()))\n          : of(null)\n      )\n    )\n  );\n\n  // When the selected wallet changes, initialize the state\n  readonly onWalletChanged = this.effect(() =>\n    combineLatest([this._name$, this.wallets$]).pipe(\n      tap(([name, wallets]) => {\n        const wallet = wallets.find(({ adapter }) => adapter.name === name);\n\n        if (wallet) {\n          this.patchState({\n            wallet,\n            adapter: wallet.adapter,\n            connected: wallet.adapter.connected,\n            publicKey: wallet.adapter.publicKey,\n            readyState: wallet.adapter.readyState,\n          });\n        } else {\n          this.patchState(initialState);\n        }\n      })\n    )\n  );\n\n  // If autoConnect is enabled, try to connect when the adapter changes and is ready\n  readonly onAutoConnect = this.effect(() => {\n    return combineLatest([\n      this._adapter$,\n      this._readyState$,\n      this.autoConnect$,\n      this.connecting$,\n      this.connected$,\n    ]).pipe(\n      concatMap(([adapter, readyState, autoConnect, connecting, connected]) => {\n        if (\n          !autoConnect ||\n          adapter == null ||\n          (readyState !== WalletReadyState.Installed &&\n            readyState !== WalletReadyState.Loadable) ||\n          connecting ||\n          connected\n        ) {\n          return EMPTY;\n        }\n\n        this.patchState({ connecting: true });\n        return from(defer(() => adapter.connect())).pipe(\n          catchError(() => {\n            // Clear the selected wallet\n            this.selectWallet(null);\n            // Don't throw error, but onError will still be called\n            return EMPTY;\n          }),\n          finalize(() => this.patchState({ connecting: false }))\n        );\n      })\n    );\n  });\n\n  // If the window is closing or reloading, ignore disconnect and error events from the adapter\n  readonly onWindowUnload = this.effect(() => {\n    if (typeof window === 'undefined') {\n      return of(null);\n    }\n\n    return fromEvent(window, 'beforeunload').pipe(\n      tap(() => this.patchState({ unloading: true }))\n    );\n  });\n\n  // Handle the adapter's connect event\n  readonly onConnect = this.effect(() => {\n    return this._adapter$.pipe(\n      handleEvent((adapter) =>\n        fromAdapterEvent(adapter, 'connect').pipe(\n          tap(() =>\n            this.patchState({\n              connected: adapter.connected,\n              publicKey: adapter.publicKey,\n            })\n          )\n        )\n      )\n    );\n  });\n\n  // Handle the adapter's disconnect event\n  readonly onDisconnect = this.effect(() => {\n    return this._adapter$.pipe(\n      handleEvent((adapter) =>\n        fromAdapterEvent(adapter, 'disconnect').pipe(\n          concatMap(() => of(null).pipe(withLatestFrom(this._unloading$))),\n          filter(([, unloading]) => !unloading),\n          tap(() => this.selectWallet(null))\n        )\n      )\n    );\n  });\n\n  // Handle the adapter's error event\n  readonly onError = this.effect(() => {\n    return this._adapter$.pipe(\n      handleEvent((adapter) =>\n        fromAdapterEvent(adapter, 'error').pipe(\n          tap((error) => this._setError(error))\n        )\n      )\n    );\n  });\n\n  // Handle all adapters ready state change events\n  readonly onReadyStateChanges = this.effect(() => {\n    return this._adapters$.pipe(\n      switchMap((adapters) =>\n        merge(\n          ...adapters.map((adapter) =>\n            fromAdapterEvent(adapter, 'readyStateChange').pipe(\n              tap((readyState) =>\n                this._setReadyState({ readyState, walletName: adapter.name })\n              )\n            )\n          )\n        )\n      )\n    );\n  });\n\n  // Select a new wallet\n  selectWallet(walletName: WalletName | null) {\n    this._name.next(walletName);\n  }\n\n  // Connect the adapter to the wallet\n  connect(): Observable<unknown> {\n    return combineLatest([\n      this.connecting$,\n      this.disconnecting$,\n      this.connected$,\n      this._adapter$,\n      this._readyState$,\n    ]).pipe(\n      first(),\n      filter(\n        ([connecting, disconnecting, connected]) =>\n          !connected && !connecting && !disconnecting\n      ),\n      concatMap(([, , , adapter, readyState]) => {\n        if (!adapter) {\n          const error = new WalletNotSelectedError();\n          this._setError(error);\n          return throwError(() => error);\n        }\n\n        if (\n          !(\n            readyState === WalletReadyState.Installed ||\n            readyState === WalletReadyState.Loadable\n          )\n        ) {\n          this.selectWallet(null);\n\n          if (typeof window !== 'undefined') {\n            window.open(adapter.url, '_blank');\n          }\n\n          const error = new WalletNotReadyError();\n          this._setError(error);\n          return throwError(() => error);\n        }\n\n        this.patchState({ connecting: true });\n\n        return from(defer(() => adapter.connect())).pipe(\n          catchError((error) => {\n            this.selectWallet(null);\n            return throwError(() => error);\n          }),\n          finalize(() => this.patchState({ connecting: false }))\n        );\n      })\n    );\n  }\n\n  // Disconnect the adapter from the wallet\n  disconnect(): Observable<unknown> {\n    return combineLatest([this.disconnecting$, this._adapter$]).pipe(\n      first(),\n      filter(([disconnecting]) => !disconnecting),\n      concatMap(([, adapter]) => {\n        if (!adapter) {\n          this.selectWallet(null);\n          return EMPTY;\n        }\n\n        this.patchState({ disconnecting: true });\n        return from(defer(() => adapter.disconnect())).pipe(\n          catchError((error) => {\n            this.selectWallet(null);\n            // Rethrow the error, and handleError will also be called\n            return throwError(() => error);\n          }),\n          finalize(() => {\n            this.patchState({ disconnecting: false });\n          })\n        );\n      })\n    );\n  }\n\n  // Send a transaction using the provided connection\n  sendTransaction<T extends Transaction | VersionedTransaction>(\n    transaction: T,\n    connection: Connection,\n    options?: SendTransactionOptions\n  ): Observable<TransactionSignature> {\n    return combineLatest([this._adapter$, this.connected$]).pipe(\n      first(),\n      concatMap(([adapter, connected]) => {\n        if (!adapter) {\n          const error = new WalletNotSelectedError();\n          this._setError(error);\n          return throwError(() => error);\n        }\n\n        if (!connected) {\n          const error = new WalletNotConnectedError();\n          this._setError(error);\n          return throwError(() => error);\n        }\n\n        return from(\n          defer(() => adapter.sendTransaction(transaction, connection, options))\n        );\n      })\n    );\n  }\n\n  // Sign a transaction if the wallet supports it\n  signTransaction<T extends Transaction | VersionedTransaction>(\n    transaction: T\n  ): ReturnType<SignerWalletAdapterProps['signTransaction']> | undefined {\n    const { adapter, connected } = this.get();\n\n    return adapter && 'signTransaction' in adapter\n      ? signTransaction(adapter, connected, (error) => this._setError(error))(\n          transaction\n        )\n      : undefined;\n  }\n\n  // Sign multiple transactions if the wallet supports it\n  signAllTransactions<T extends Transaction | VersionedTransaction>(\n    transactions: T[]\n  ): ReturnType<SignerWalletAdapterProps['signAllTransactions']> | undefined {\n    const { adapter, connected } = this.get();\n\n    return adapter && 'signAllTransactions' in adapter\n      ? signAllTransactions(adapter, connected, (error) =>\n          this._setError(error)\n        )(transactions)\n      : undefined;\n  }\n\n  // Sign an arbitrary message if the wallet supports it\n  signMessage(message: Uint8Array): Observable<Uint8Array> | undefined {\n    const { adapter, connected } = this.get();\n\n    return adapter && 'signMessage' in adapter\n      ? signMessage(adapter, connected, (error) => this._setError(error))(\n          message\n        )\n      : undefined;\n  }\n}\n","import { ModuleWithProviders, NgModule, Provider } from '@angular/core';\nimport { provideComponentStore } from '@ngrx/component-store';\nimport { ConnectionConfig } from '@solana/web3.js';\nimport {\n  ConnectionStore,\n  connectionConfigProviderFactory,\n} from './connection.store';\nimport {\n  WalletConfig,\n  WalletStore,\n  walletConfigProviderFactory,\n} from './wallet.store';\n\nexport function provideWalletAdapter(\n  walletConfig: Partial<WalletConfig>,\n  connectionConfig?: ConnectionConfig\n): Provider[] {\n  return [\n    walletConfigProviderFactory(walletConfig),\n    connectionConfigProviderFactory(connectionConfig),\n    provideComponentStore(WalletStore),\n    provideComponentStore(ConnectionStore),\n  ];\n}\n\n@NgModule({})\nexport class HdWalletAdapterModule {\n  static forRoot(\n    walletConfig: Partial<WalletConfig>,\n    connectionConfig?: ConnectionConfig\n  ): ModuleWithProviders<HdWalletAdapterModule> {\n    return {\n      ngModule: HdWalletAdapterModule,\n      providers: [\n        walletConfigProviderFactory(walletConfig),\n        connectionConfigProviderFactory(connectionConfig),\n        ConnectionStore,\n        WalletStore,\n      ],\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["filter"],"mappings":"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"}